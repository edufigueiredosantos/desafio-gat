import { InMemoryDbService } from 'angular-in-memory-web-api';

import { Vulnerability } from './shared/models/vulnerability.model';

export class InMemoryDatabase implements InMemoryDbService {

    createDb() {
        const vulnerabilities: Vulnerability[] = [
            {
                id: '37057',
                name: 'HTTP Methods Allowed (per directory)',
                // tslint:disable-next-line:max-line-length
                description: 'By calling the OPTIONS method, it is possible to determine which HTTP methods are allowed on each directory. \n\nAs this list may be incomplete, the plugin also tests - if \'Thorough tests\' are enabled or \'Enable web applications tests\' is set to \'yes\' in the scan policy - various known HTTP methods on each directory and considers them as unsupported if it receives a response code of 400, 403, 405, or 501. \n\nNote that the plugin output is only informational and does not necessarily indicate the presence of any security vulnerabilities.',
                asset: '10.15.0.112',
                assetDetail: 'host.name1',
                status: 'PENDING',
                severityAssetRisk: 'INFORMATIVE',
                responsible: 'user1@empresa.com.br',
                port: '2381',
                protocol: 'tcp',
                serviceName: 'www',
                source: 'SCAN',
                changedDate: '11/01/2017-19:31:07',
                lastSeenDate: '08/06/2016-18:37:36',
                dueDate: '27/02/2019-23:00:00',
                tags: 'HTTP',
                kb: 'HTTP Methods Allowed (per directory)',
                category: 'Web Server Configuration'
            },
            {
                id: '37055',
                name: 'SSL Certificate Information',
                description: 'This plugin connects to every SSL-related port and attempts to extract and dump the X.509 certificate.',
                asset: '10.15.0.126',
                assetDetail: 'host.name2',
                status: 'PENDING',
                severityAssetRisk: 'LOW',
                responsible: 'user3@empresa.com.br',
                port: '2381',
                protocol: 'tcp',
                serviceName: 'www',
                source: 'MANUAL',
                changedDate: '16/01/2017-19:31:08',
                lastSeenDate: '08/06/2016-19:44:25',
                dueDate: '27/02/2019-23:00:01',
                tags: 'SSL',
                kb: 'SSL Certificate Information',
                category: 'Certificate Configuration'
            },
            {
                id: '37054',
                name: 'Nessus SYN scanner',
                // tslint:disable-next-line:max-line-length
                description: 'This plugin is a SYN \'half-open\' port scanner.  It shall be reasonably quick even against a firewalled target. \n\nNote that SYN scans are less intrusive than TCP (full connect) scans against broken services, but they might cause problems for less robust firewalls and also leave unclosed connections on the remote target, if the network is loaded.',
                asset: '10.15.0.14',
                assetDetail: 'host.name3',
                status: 'REOPENED',
                severityAssetRisk: 'HIGH',
                responsible: 'user2@empresa.com.br',
                port: '135',
                protocol: 'tcp',
                serviceName: 'epmap',
                source: 'CHECKLIST',
                changedDate: '11/04/2017-19:31:09',
                lastSeenDate: '08/06/2016-14:05:19',
                dueDate: '27/02/2019-23:00:02',
                tags: 'SYN; NESSUS',
                kb: 'Nessus SYN scanner',
                recommendations: 'Protect your target with an IP filter.\n',
                category: 'Scan Information'
            },
            {
                id: '37053',
                name: 'RPC Services Enumeration',
                // tslint:disable-next-line:max-line-length
                description: 'By sending a DUMP request to the portmapper, it was possible to enumerate the ONC RPC services running on the remote port.  Using this information, it is possible to connect and bind to each service by sending an RPC request to the remote port.',
                asset: '10.15.0.54',
                assetDetail: 'host.name4',
                status: 'PENDING',
                severityAssetRisk: 'LOW',
                responsible: 'user4@empresa.com.br',
                port: '2049',
                protocol: 'udp',
                serviceName: 'rpc-200006',
                source: 'CHECKLIST',
                changedDate: '11/01/2018-19:31:10',
                lastSeenDate: '08/06/2016-16:56:36',
                dueDate: '27/02/2019-23:00:03',
                tags: 'RPC',
                kb: 'RPC Services Enumeration',
                category: 'RPC Configuration'
            },
            {
                id: '37052',
                name: 'SSH Protocol Versions Supported',
                description: 'This plugin determines the versions of the SSH protocol supported by the remote SSH daemon.',
                asset: '10.15.0.182',
                assetDetail: 'host.name5',
                status: 'FIXED',
                severityAssetRisk: 'INFORMATIVE',
                responsible: 'user5@empresa.com.br',
                port: '22',
                protocol: 'tcp',
                serviceName: 'ssh',
                source: 'CHECKLIST',
                changedDate: '01/01/2018-19:31:11',
                lastSeenDate: '08/06/2016-20:48:25',
                dueDate: '07/02/2019-23:00:04',
                tags: 'SSH; Protocol',
                kb: 'SSH Protocol Versions Supported',
                category: 'SSH Configuration'
            },
            {
                id: '37051',
                name: 'Nessus SYN scanner',
                // tslint:disable-next-line:max-line-length
                description: 'This plugin is a SYN \'half-open\' port scanner.  It shall be reasonably quick even against a firewalled target. \n\nNote that SYN scans are less intrusive than TCP (full connect) scans against broken services, but they might cause problems for less robust firewalls and also leave unclosed connections on the remote target, if the network is loaded.',
                asset: '10.15.0.125',
                assetDetail: 'host.name6',
                status: 'ACCEPTED',
                severityAssetRisk: 'CRITICAL',
                responsible: 'user6@empresa.com.br',
                port: '135',
                protocol: 'tcp',
                serviceName: 'epmap',
                source: 'CHECKLIST',
                changedDate: '11/03/2018-19:31:12',
                lastSeenDate: '08/06/2016-19:36:34',
                dueDate: '07/02/2019-23:00:05',
                tags: 'SYN; NESSUS',
                kb: 'Nessus SYN scanner',
                recommendations: 'Protect your target with an IP filter.\n',
                category: 'Scan Information'
            },
            {
                id: '37050',
                name: 'Nessus SNMP Scanner',
                // tslint:disable-next-line:max-line-length
                description: 'This plugin runs an SNMP scan against the remote machine to find open ports.\n\nSee the section \'plugins options\' to configure it.',
                asset: '10.15.0.113',
                assetDetail: 'host.name7',
                status: 'PENDING',
                severityAssetRisk: 'CRITICAL',
                responsible: 'user1@empresa.com.br',
                port: '161',
                protocol: 'tcp',
                serviceName: 'snmp',
                source: 'MANUAL',
                changedDate: '11/06/2018-19:31:13',
                lastSeenDate: '08/06/2016-18:43:56',
                dueDate: '07/02/2019-23:00:06',
                tags: 'SNMP',
                kb: 'Nessus SNMP Scanner',
                category: 'Scan Information'
            },
            {
                id: '37049',
                name: 'Microsoft Windows SMB Registry : Nessus Cannot Access the Windows Registry',
                // tslint:disable-next-line:max-line-length
                description: 'It was not possible to connect to PIPE\\winreg on the remote host.\n\nIf you intend to use Nessus to perform registry-based checks, the registry checks will not work because the \'Remote Registry Access\' service (winreg) has been disabled on the remote host or can not be connected to with the supplied credentials.',
                asset: '10.15.0.145',
                assetDetail: 'host.name8',
                status: 'IN RETEST',
                severityAssetRisk: 'LOW',
                responsible: 'user4@empresa.com.br',
                port: '445',
                protocol: 'tcp',
                serviceName: 'cifs',
                source: 'SCAN',
                changedDate: '11/07/2018-19:31:14',
                lastSeenDate: '08/06/2016-20:28:45',
                dueDate: '07/02/2019-23:00:07',
                tags: 'Microsoft',
                kb: 'Microsoft Windows SMB Registry : Nessus Cannot Access the Windows Registry',
                category: 'Windows Configuration'
            },
            {
                id: '37048',
                name: 'SSL Certificate Cannot Be Trusted',
                // tslint:disable-next-line:max-line-length
                description: 'The server\'s X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate\'s \'notBefore\' dates, or after one of the     certificate\'s \'notAfter\' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn\'t match the certificate\'s information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate\'s issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.',
                asset: '10.15.0.126',
                assetDetail: 'host.name9',
                status: 'PENDING',
                severityAssetRisk: 'INFORMATIVE',
                responsible: 'user5@empresa.com.br',
                port: '3389',
                protocol: 'tcp',
                serviceName: 'msrdp',
                source: 'SCAN',
                changedDate: '11/01/2018-19:31:15',
                lastSeenDate: '08/06/2016-19:44:25',
                dueDate: '17/01/2019-23:00:08',
                tags: 'SSL',
                kb: 'SSL Certificate Cannot Be Trusted',
                recommendations: 'Purchase or generate a proper certificate for this service.\n',
                category: 'Certificate Configuration'
            },
            {
                id: '37047',
                name: 'SSL Certificate Cannot Be Trusted',
                // tslint:disable-next-line:max-line-length
                description: 'The server\'s X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate\'s \'notBefore\' dates, or after one of the     certificate\'s \'notAfter\' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn\'t match the certificate\'s information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate\'s issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.',
                asset: '10.15.0.15',
                assetDetail: 'host.name10',
                status: 'IN TREATMENT',
                severityAssetRisk: 'HIGH',
                responsible: 'user6@empresa.com.br',
                port: '3389',
                protocol: 'tcp',
                serviceName: 'msrdp',
                source: 'SCAN',
                changedDate: '11/11/2018-19:31:16',
                lastSeenDate: '08/06/2016-14:20:00',
                dueDate: '17/01/2019-23:00:09',
                tags: 'SSL',
                kb: 'SSL Certificate Cannot Be Trusted',
                recommendations: 'Purchase or generate a proper certificate for this service.\n',
                category: 'Certificate Configuration'
            },
            {
                id: '37046',
                name: 'Nessus SYN scanner',
                // tslint:disable-next-line:max-line-length
                description: 'This plugin is a SYN \'half-open\' port scanner.  It shall be reasonably quick even against a firewalled target. \n\nNote that SYN scans are less intrusive than TCP (full connect) scans against broken services, but they might cause problems for less robust firewalls and also leave unclosed connections on the remote target, if the network is loaded.',
                asset: '10.15.0.40',
                assetDetail: 'host.name11',
                status: 'NON EXISTENT',
                severityAssetRisk: 'MEDIUM',
                responsible: 'user1@empresa.com.br',
                port: '3389',
                protocol: 'tcp',
                serviceName: 'msrdp',
                source: 'SCAN',
                changedDate: '11/06/2018-19:31:17',
                lastSeenDate: '08/06/2016-15:49:33',
                dueDate: '17/01/2019-23:00:10',
                tags: 'SYN; NESSUS',
                kb: 'Nessus SYN scanner',
                recommendations: 'Protect your target with an IP filter.\n',
                category: 'Scan Information'
            },
            {
                id: '37045',
                name: 'Microsoft Windows SMB Service Detection',
                // tslint:disable-next-line:max-line-length
                description: 'The remote service understands the CIFS (Common Internet File System) or Server Message Block (SMB) protocol, used to provide shared access to files, printers, etc between nodes on a network.',
                asset: '10.15.0.45',
                assetDetail: 'host.name12',
                status: 'ACCEPTED',
                severityAssetRisk: 'LOW',
                responsible: 'user3@empresa.com.br',
                port: '139',
                protocol: 'tcp',
                serviceName: 'smb',
                source: 'SCAN',
                changedDate: '21/01/2018-19:31:18',
                lastSeenDate: '08/06/2016-16:08:15',
                dueDate: '17/01/2019-23:00:11',
                tags: 'Microsoft; SMB',
                kb: 'Microsoft Windows SMB Service Detection',
                category: 'Windows Configuration'
            },
            {
                id: '37044',
                name: 'Nessus SYN scanner',
                // tslint:disable-next-line:max-line-length
                description: 'This plugin is a SYN \'half-open\' port scanner.  It shall be reasonably quick even against a firewalled target. \n\nNote that SYN scans are less intrusive than TCP (full connect) scans against broken services, but they might cause problems for less robust firewalls and also leave unclosed connections on the remote target, if the network is loaded.',
                asset: '10.15.0.19',
                assetDetail: 'host.name13',
                status: 'REOPENED',
                severityAssetRisk: 'MEDIUM',
                responsible: 'user1@empresa.com.br',
                port: '80',
                protocol: 'tcp',
                serviceName: 'www',
                source: 'SCAN',
                changedDate: '12/01/2018-19:31:19',
                lastSeenDate: '08/06/2016-14:44:25',
                dueDate: '17/01/2019-23:00:12',
                tags: 'SYN; NESSUS',
                kb: 'Nessus SYN scanner',
                recommendations: 'Protect your target with an IP filter.\n',
                category: 'Scan Information'
            },
            {
                id: '37043',
                name: 'SSL Certificate Information',
                description: 'This plugin connects to every SSL-related port and attempts to extract and dump the X.509 certificate.',
                asset: '10.15.0.133',
                assetDetail: 'host.name14',
                status: 'IN RETEST',
                severityAssetRisk: 'CRITICAL',
                responsible: 'user3@empresa.com.br',
                port: '48007',
                protocol: 'tcp',
                serviceName: 'unknown',
                source: 'SCAN',
                changedDate: '01/01/2018-19:31:20',
                lastSeenDate: '08/06/2016-20:33:03',
                dueDate: '17/01/2019-23:00:13',
                tags: 'SSL',
                kb: 'SSL Certificate Information',
                category: 'Certificate Configuration'
            },
            {
                id: '37042',
                name: 'Service Detection',
                // tslint:disable-next-line:max-line-length
                description: 'Nessus was able to identify the remote service by its banner or by looking at the error message it sends when it receives an HTTP request.',
                asset: '10.15.0.23',
                assetDetail: 'host.name15',
                status: 'NON EXISTENT',
                severityAssetRisk: 'HIGH',
                responsible: 'user3@empresa.com.br',
                port: '3872',
                protocol: 'tcp',
                serviceName: 'www',
                source: 'SCAN',
                changedDate: '11/03/2018-19:31:21',
                lastSeenDate: '08/06/2016-22:08:39',
                dueDate: '17/01/2019-23:00:14',
                tags: 'Service',
                kb: 'Service Detection',
                category: 'Scan Information'
            },
            {
                id: '37041',
                name: 'Nessus SYN scanner',
                // tslint:disable-next-line:max-line-length
                description: 'This plugin is a SYN \'half-open\' port scanner.  It shall be reasonably quick even against a firewalled target. \n\nNote that SYN scans are less intrusive than TCP (full connect) scans against broken services, but they might cause problems for less robust firewalls and also leave unclosed connections on the remote target, if the network is loaded.',
                asset: '10.15.0.15',
                assetDetail: 'host.name16',
                status: 'ACCEPTED',
                severityAssetRisk: 'INFORMATIVE',
                responsible: 'user3@empresa.com.br',
                port: '135',
                protocol: 'tcp',
                serviceName: 'epmap',
                source: 'SCAN',
                changedDate: '11/05/2018-19:31:22',
                lastSeenDate: '08/06/2016-14:20:00',
                dueDate: '11/03/2019-23:00:15',
                tags: 'SYN; NESSUS',
                kb: 'Nessus SYN scanner',
                recommendations: 'Protect your target with an IP filter.\n',
                category: 'Scan Information'
            },
            {
                id: '37040',
                name: 'SSL Certificate Cannot Be Trusted',
                // tslint:disable-next-line:max-line-length
                description: 'The server\'s X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below :\n\n  - First, the top of the certificate chain sent by the     server might not be descended from a known public     certificate authority. This can occur either when the     top of the chain is an unrecognized, self-signed     certificate, or when intermediate certificates are     missing that would connect the top of the certificate     chain to a known public certificate authority.\n\n  - Second, the certificate chain may contain a certificate     that is not valid at the time of the scan. This can     occur either when the scan occurs before one of the     certificate\'s \'notBefore\' dates, or after one of the     certificate\'s \'notAfter\' dates.\n\n  - Third, the certificate chain may contain a signature     that either didn\'t match the certificate\'s information     or could not be verified. Bad signatures can be fixed by     getting the certificate with the bad signature to be     re-signed by its issuer. Signatures that could not be     verified are the result of the certificate\'s issuer     using a signing algorithm that Nessus either does not     support or does not recognize.\n\nIf the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.',
                asset: '10.15.0.23',
                assetDetail: 'host.name17',
                status: 'PENDING',
                severityAssetRisk: 'INFORMATIVE',
                port: '4903',
                protocol: 'tcp',
                serviceName: 'www',
                source: 'CHECKLIST',
                changedDate: '11/01/2018-19:31:23',
                lastSeenDate: '08/06/2016-22:08:39',
                dueDate: '11/03/2019-23:00:16',
                tags: 'SSL',
                kb: 'SSL Certificate Cannot Be Trusted',
                recommendations: 'Purchase or generate a proper certificate for this service.\n',
                category: 'Certificate Configuration'
            },
            {
                id: '37039',
                name: 'SSL Certificate Information',
                description: 'This plugin connects to every SSL-related port and attempts to extract and dump the X.509 certificate.',
                asset: '10.15.0.16',
                assetDetail: 'host.name18',
                status: 'PENDING',
                severityAssetRisk: 'INFORMATIVE',
                port: '2381',
                protocol: 'tcp',
                serviceName: 'www',
                source: 'CHECKLIST',
                changedDate: '11/01/2018-19:31:24',
                lastSeenDate: '08/06/2016-14:30:14',
                dueDate: '11/03/2019-23:00:17',
                tags: 'SSL',
                kb: 'SSL Certificate Information',
                category: 'Certificate Configuration'
            },
            {
                id: '37038',
                name: 'HTTP Methods Allowed (per directory)',
                // tslint:disable-next-line:max-line-length
                description: 'By calling the OPTIONS method, it is possible to determine which HTTP methods are allowed on each directory. \n\nAs this list may be incomplete, the plugin also tests - if \'Thorough tests\' are enabled or \'Enable web applications tests\' is set to \'yes\' in the scan policy - various known HTTP methods on each directory and considers them as unsupported if it receives a response code of 400, 403, 405, or 501. \n\nNote that the plugin output is only informational and does not necessarily indicate the presence of any security vulnerabilities.',
                asset: '10.15.0.111',
                assetDetail: 'host.name19',
                status: 'PENDING',
                severityAssetRisk: 'INFORMATIVE',
                port: '2381',
                protocol: 'tcp',
                serviceName: 'www',
                source: 'SCAN',
                changedDate: '19/07/2018-19:31:25',
                lastSeenDate: '08/06/2016-18:36:55',
                dueDate: '11/03/2019-23:00:18',
                tags: 'HTTP',
                kb: 'HTTP Methods Allowed (per directory)',
                category: 'Web Server Configuration'
            },
            {
                id: '37037',
                name: 'Nessus SYN scanner',
                // tslint:disable-next-line:max-line-length
                description: 'This plugin is a SYN \'half-open\' port scanner.  It shall be reasonably quick even against a firewalled target. \n\nNote that SYN scans are less intrusive than TCP (full connect) scans against broken services, but they might cause problems for less robust firewalls and also leave unclosed connections on the remote target, if the network is loaded.',
                asset: '10.15.0.124',
                assetDetail: 'host.name20',
                status: 'PENDING',
                severityAssetRisk: 'INFORMATIVE',
                port: '135',
                protocol: 'tcp',
                serviceName: 'epmap',
                source: 'SCAN',
                changedDate: '17/01/2018-19:31:26',
                lastSeenDate: '08/06/2016-19:34:56',
                dueDate: '11/03/2019-23:00:19',
                tags: 'SYN; NESSUS',
                kb: 'Nessus SYN scanner',
                recommendations: 'Protect your target with an IP filter.\n',
                category: 'Scan Information'
            }
        ];

        const columns = [
            'ID', 'Name', 'Description', 'Asset', 'Asset detail', 'Status', 'Severity (Asset risk)', 'Responsible', 'Port', 'Protocol',
            'Service name', 'Source', 'Changed date', 'Last seen date', 'Due date', 'Tags', 'KB', 'Recommendations', 'Category'
        ]
        return { vulnerabilities, columns };
    }
}
